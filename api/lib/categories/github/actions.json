[
    {
        "actionName": "getCount",
        "slots": [
            {
                "slotName": "githubItem",
                "uiColor": "#D5AAFF",
                "keyword": "githubItem",
                "keywordId": 25,
                "isList": false,
                "isRequired": true,
                "quickResponses": [],
                "textPrompts": [
                    "Which item do you want the count of?"
                ],
                "freeText": false
            }
        ],
        "responses": [
            {
                "textResponse": "The repository has: {{lookup webhook.countWebhook.response slots.githubItem.value}} {{slots.githubItem.original}}",
                "actions": []
            }
        ],
        "useWebhook": true,
        "usePostFormat": false,
        "creationDate": "1571429471000",
        "modificationDate": "1571429471000",
        "webhook": {
            "webhookKey": "countWebhook",
            "webhookUrl": "https://api.github.com/repos/{{categories.Github.parameters.repoPath}}",
            "webhookVerb": "GET",
            "webhookPayloadType": "None",
            "webhookPayload": "",
            "webhookHeaders": [
                {
                    "key": "Authorization",
                    "value": "{{categories.parameters.token}}"
                }
            ],
            "webhookUser": "",
            "webhookPassword": "",
            "postScript": "",
            "creationDate": "1571429471000",
            "modificationDate": "1571429471000"
        }
    },
    {
        "actionName": "postIssue",
        "slots": [
            {
                "slotName": "title",
                "uiColor": "#4e4e4e",
                "keyword": "sys.any",
                "keywordId": 0,
                "isList": false,
                "isRequired": true,
                "quickResponses": [],
                "textPrompts": [
                    "What title do you want?"
                ],
                "freeText": true,
                "remainingLife": null,
                "promptCountLimit": null
            },
            {
                "slotName": "body",
                "uiColor": "#4e4e4e",
                "keyword": "sys.any",
                "keywordId": 0,
                "isList": false,
                "isRequired": true,
                "quickResponses": [],
                "textPrompts": [
                    "What is the description of the issue"
                ],
                "freeText": true,
                "remainingLife": null,
                "promptCountLimit": null
            }
        ],
        "responses": [
            {
                "textResponse": "{{#if webhook.postIssueWebhook.response}} The issue was created succesfully {{else}} Im sorry, there was a problem creating your issue{{/if}}",
                "actions": []
            }
        ],
        "useWebhook": true,
        "usePostFormat": false,
        "creationDate": "1571429471000",
        "modificationDate": "1571429471000",
        "webhook": {
            "webhookKey": "postIssueWebhook",
            "webhookUrl": "https://api.github.com/repos/{{categories.Github.parameters.repoPath}}/issues",
            "webhookVerb": "POST",
            "webhookPayloadType": "JSON",
            "webhookPayload": "{\n  \"title\": \"{{{slots.title.value}}}\",\n  \"body\": \"{{{slots.body.value}}}\"\n}",
            "webhookHeaders": [
                {
                    "key": "Authorization",
                    "value": "{{categories.Github.parameters.token}}"
                }
            ],
            "webhookUser": "",
            "webhookPassword": "",
            "postScript": "CSO.context.savedSlots[\"currentContextIssue\"] = \n {\n    \"keyword\": \"githubItem\",\n    \"value\": CSO.webhook.postIssueWebhook.response,\n    \"original\": CSO.webhook.postIssueWebhook.response,\n    \"remainingLife\": 10,\n    \"promptCount\": 0\n}\n\nCSO;",
            "creationDate": "1571429471000",
            "modificationDate": "1571429471000"
        }
    },
    {
        "actionName": "assignCurrentContextIssue",
        "slots": [
            {
                "slotName": "githubUserName",
                "uiColor": "#4e4e4e",
                "keyword": "sys.any",
                "keywordId": 0,
                "isList": false,
                "isRequired": true,
                "quickResponses": [],
                "textPrompts": [
                    "To which user you want to assign this issue?"
                ],
                "freeText": true,
                "remainingLife": null,
                "promptCountLimit": null
            }
        ],
        "responses": [
            {
                "textResponse": "{{#if webhook.assignCurrentContextIssueWebhook.error}} {{#eq webhook.assignCurrentContextIssueWebhook.error.message compare = \"Validation Failed\"}} I'm sorry, there was a problem with your request, make sure that the username is correct {{/eq}} {{#eq webhook.assignCurrentContextIssueWebhook.error.message compare = \"Not Found\"}} I'm sorry, I don't remember any issue posted or requested recently in this conversation{{/eq}} {{else}} The issue has been assigned {{/if}}",
                "actions": []
            }
        ],
        "useWebhook": true,
        "usePostFormat": false,
        "creationDate": "1571429471000",
        "modificationDate": "1571429471000",
        "webhook": {
            "webhookKey": "assignCurrentContextIssueWebhook",
            "webhookUrl": "https://api.github.com/repos/{{categories.Github.parameters.repoPath}}/issues/{{context.savedSlots.currentContextIssue.value.number}}",
            "webhookVerb": "PATCH",
            "webhookPayloadType": "JSON",
            "webhookPayload": "{\n\t\"assignees\" : [\"{{{slots.githubUserName.value}}}\"]\n}",
            "webhookHeaders": [
                {
                    "key": "Authorization",
                    "value": "{{categories.Github.parameters.token}}"
                }
            ],
            "webhookUser": "",
            "webhookPassword": "",
            "postScript": "",
            "creationDate": "1571429471000",
            "modificationDate": "1571429471000"
        }
    },
    {
        "actionName": "getUserName",
        "slots": [],
        "responses": [
            {
                "textResponse": "{{#if webhook.getUserNameWebhook.response}}I see that your username is: {{webhook.getUserNameWebhook.response.login}}{{else}}I'm sorry, there was a problem getting your user name{{/if}}",
                "actions": []
            }
        ],
        "useWebhook": true,
        "usePostFormat": false,
        "creationDate": "1571429471000",
        "modificationDate": "1571429471000",
        "webhook": {
            "webhookKey": "getUserNameWebhook",
            "webhookUrl": "https://api.github.com/user",
            "webhookVerb": "GET",
            "webhookPayloadType": "None",
            "webhookPayload": "",
            "webhookHeaders": [
                {
                    "key": "Authorization",
                    "value": "{{categories.Github.parameters.token}}"
                }
            ],
            "webhookUser": "",
            "webhookPassword": "",
            "postScript": "CSO.context.savedSlots[\"currentContextUserName\"] = \n {\n    \"keyword\": \"githubItem\",\n    \"value\": CSO.webhook.getUserNameWebhook.response,\n    \"original\": CSO.webhook.getUserNameWebhook.response,\n    \"remainingLife\": 1,\n    \"promptCount\": 0\n}\n\nCSO;",
            "creationDate": "1571429471000",
            "modificationDate": "1571429471000"
        }
    },
    {
        "actionName": "postCommentOnIssue",
        "slots": [
            {
                "slotName": "body",
                "uiColor": "#4e4e4e",
                "keyword": "sys.any",
                "keywordId": 0,
                "isList": false,
                "isRequired": true,
                "quickResponses": [],
                "textPrompts": [
                    "Please write your comment"
                ],
                "freeText": true,
                "remainingLife": null,
                "promptCountLimit": null
            }
        ],
        "responses": [
            {
                "textResponse": "Done",
                "actions": []
            },
            {
                "textResponse": "{{#if webhook.postCommentOnIssueWebhook.error}} {{#eq webhook.postCommentOnIssueWebhook.error.message compare = \"Not Found\"}} I'm sorry, I don't remember any issue created or requested recently in this conversation{{/eq}} {{else}}  The comment was added to the issue {{/if}}",
                "actions": []
            }
        ],
        "useWebhook": true,
        "usePostFormat": false,
        "creationDate": "1571429471000",
        "modificationDate": "1571429471000",
        "webhook": {
            "webhookKey": "postCommentOnIssueWebhook",
            "webhookUrl": "https://api.github.com/repos/{{categories.Github.parameters.repoPath}}/issues/{{context.savedSlots.currentContextIssue.value.number}}/comments",
            "webhookVerb": "POST",
            "webhookPayloadType": "JSON",
            "webhookPayload": "{\n  \"body\": \"{{{slots.body.value}}}\"\n}",
            "webhookHeaders": [
                {
                    "key": "Authorization",
                    "value": "{{categories.Github.parameters.token}}"
                }
            ],
            "webhookUser": "",
            "webhookPassword": "",
            "postScript": "",
            "creationDate": "1571429471000",
            "modificationDate": "1571429471000"
        }
    },
    {
        "actionName": "closeCurrentContextIssue",
        "slots": [],
        "responses": [
            {
                "textResponse": "{{#if webhook.closeCurrentContextIssueWebhook.error}} {{#eq webhook.closeCurrentContextIssueWebhook.error.message compare = \"Not Found\"}} I'm sorry, I don't remember any issue posted or requested recently in this conversation{{/eq}} {{else}} The issue has been closed {{/if}}",
                "actions": []
            }
        ],
        "useWebhook": true,
        "usePostFormat": false,
        "creationDate": "1571429471000",
        "modificationDate": "1571429471000",
        "webhook": {
            "webhookKey": "closeCurrentContextIssueWebhook",
            "webhookUrl": "https://api.github.com/repos/{{categories.Github.parameters.repoPath}}/issues/{{context.savedSlots.currentContextIssue.value.number}}",
            "webhookVerb": "PATCH",
            "webhookPayloadType": "JSON",
            "webhookPayload": "{\n\t\"state\" : \"closed\"\n}",
            "webhookHeaders": [
                {
                    "key": "Authorization",
                    "value": "{{categories.Github.parameters.token}}"
                }
            ],
            "webhookUser": "",
            "webhookPassword": "",
            "postScript": "",
            "creationDate": "1571429471000",
            "modificationDate": "1571429471000"
        }
    },
    {
        "actionName": "labelIssue",
        "slots": [
            {
                "slotName": "labelList",
                "uiColor": "#B28DFF",
                "keyword": "issueLabels",
                "keywordId": 26,
                "isList": true,
                "isRequired": true,
                "quickResponses": [],
                "textPrompts": [
                    "Which labels do you want to add?"
                ],
                "freeText": false,
                "remainingLife": null,
                "promptCountLimit": null
            }
        ],
        "responses": [
            {
                "textResponse": "{{#if webhook.labelIssueWebhook.error}} {{#eq webhook.labelIssueWebhook.error.message compare = \"Not Found\"}} I'm sorry, I don't remember any issue created or requested recently in this conversation{{/eq}} {{else}}  The issue has been labeled correctly {{/if}}",
                "actions": []
            }
        ],
        "useWebhook": true,
        "usePostFormat": false,
        "creationDate": "1571429471000",
        "modificationDate": "1571429471000",
        "webhook": {
            "webhookKey": "labelIssueWebhook",
            "webhookUrl": "https://api.github.com/repos/{{categories.Github.parameters.repoPath}}/issues/{{context.savedSlots.currentContextIssue.value.number}}/labels",
            "webhookVerb": "POST",
            "webhookPayloadType": "JSON",
            "webhookPayload": "{\n  \"labels\": [{{#each slots.labelList.value}} \"{{this}}\"{{#unless @last}},{{/unless}} {{/each}}]\n}",
            "webhookHeaders": [
                {
                    "key": "Authorization",
                    "value": "{{categories.Github.parameters.token}}"
                }
            ],
            "webhookUser": "",
            "webhookPassword": "",
            "postScript": "",
            "creationDate": "1571429471000",
            "modificationDate": "1571429471000"
        }
    },
    {
        "actionName": "countLastOpenMilestoneOpenIssues",
        "slots": [],
        "responses": [
            {
                "textResponse": "{{#if webhook.lastOpenMilestoneWebhook.error}} {{#eq webhook.lastOpenMilestoneWebhook.error.message compare = \"Not Found\"}} I'm sorry, I don't remember any milestone created or requested recently in this conversation{{/eq}} {{else}}  The nearest open milestone has {{context.savedSlots.currentContextMilestone.value.open_issues}} open issue(s) {{/if}}",
                "actions": []
            }
        ],
        "useWebhook": true,
        "usePostFormat": false,
        "creationDate": "1571429471000",
        "modificationDate": "1571429471000",
        "webhook": {
            "webhookKey": "lastOpenMilestoneWebhook",
            "webhookUrl": "https://api.github.com/repos/{{categories.Github.parameters.repoPath}}/milestones?state=open&direction=asc",
            "webhookVerb": "GET",
            "webhookPayloadType": "None",
            "webhookPayload": "",
            "webhookHeaders": [
                {
                    "key": "Authorization",
                    "value": "{{categories.Github.parameters.token}}"
                }
            ],
            "webhookUser": "",
            "webhookPassword": "",
            "postScript": "CSO.context.savedSlots[\"currentContextMilestone\"] = \n {\n    \"keyword\": \"githubItem\",\n    \"value\": CSO.webhook.lastOpenMilestoneWebhook.response[0],\n    \"original\": CSO.webhook.lastOpenMilestoneWebhook.response[0],\n    \"remainingLife\": 10,\n    \"promptCount\": 0\n}\n\nCSO;",
            "creationDate": "1571429471000",
            "modificationDate": "1571429471000"
        }
    },
    {
        "actionName": "getLastCommit",
        "slots": [],
        "responses": [
            {
                "textResponse": "{{#if webhook.lastCommitWebhook.response.0.commit}} The commit message is : \"{{webhook.lastCommitWebhook.response.0.commit.message}}\" and it was commited by: {{webhook.lastCommitWebhook.response.0.committer.login}}{{else}}There was an error getting the last commit{{/if}}",
                "actions": []
            }
        ],
        "useWebhook": true,
        "usePostFormat": false,
        "creationDate": "1571429471000",
        "modificationDate": "1571429471000",
        "webhook": {
            "webhookKey": "lastCommitWebhook",
            "webhookUrl": "https://api.github.com/repos/{{categories.Github.parameters.repoPath}}/commits",
            "webhookVerb": "GET",
            "webhookPayloadType": "None",
            "webhookPayload": "",
            "webhookHeaders": [
                {
                    "key": "Authorization",
                    "value": "{{categories.Github.parameters.token}}"
                }
            ],
            "webhookUser": "",
            "webhookPassword": "",
            "postScript": "CSO.context.savedSlots[\"currentContextCommit\"] = \n {\n    \"keyword\": \"githubItem\",\n    \"value\": CSO.webhook.lastCommitWebhook.response[0],\n    \"original\": CSO.webhook.lastCommitWebhook.response[0],\n    \"remainingLife\": 10,\n    \"promptCount\": 0\n}\n\nCSO;",
            "creationDate": "1571429471000",
            "modificationDate": "1571429471000"
        }
    },
    {
        "actionName": "getLastRelease",
        "slots": [],
        "responses": [
            {
                "textResponse": "{{#if webhook.lastReleaseWebhook.response}} This is the most recent release: \"{{webhook.lastReleaseWebhook.response.name}}\" and it's tag is: \"{{webhook.lastReleaseWebhook.response.tag_name}}\" {{else}} There are no releases {{/if}}",
                "actions": []
            }
        ],
        "useWebhook": true,
        "usePostFormat": false,
        "creationDate": "1571429471000",
        "modificationDate": "1571429471000",
        "webhook": {
            "webhookKey": "lastReleaseWebhook",
            "webhookUrl": "https://api.github.com/repos/{{categories.Github.parameters.repoPath}}/releases/latest",
            "webhookVerb": "GET",
            "webhookPayloadType": "None",
            "webhookPayload": "",
            "webhookHeaders": [
                {
                    "key": "Authorization",
                    "value": "{{categories.Github.parameters.token}}"
                }
            ],
            "webhookUser": "",
            "webhookPassword": "",
            "postScript": "CSO.context.savedSlots[\"currentContextRelease\"] = \n {\n    \"keyword\": \"githubItem\",\n    \"value\": CSO.webhook.lastReleaseWebhook.response,\n    \"original\": CSO.webhook.lastReleaseWebhook.response,\n    \"remainingLife\": 10,\n    \"promptCount\": 0\n}\n\nCSO;",
            "creationDate": "1571429471000",
            "modificationDate": "1571429471000"
        }
    },
    {
        "actionName": "getLastTag",
        "slots": [],
        "responses": [
            {
                "textResponse": "{{#if webhook.lastTagWebhook.response}}The last tag is: \"{{webhook.lastTagWebhook.response.0.name}}\"{{else}} I'm sorry, there was a problem getting the last tag{{/if}}",
                "actions": []
            }
        ],
        "useWebhook": true,
        "usePostFormat": false,
        "creationDate": "1571429471000",
        "modificationDate": "1571429471000",
        "webhook": {
            "webhookKey": "lastTagWebhook",
            "webhookUrl": "https://api.github.com/repos/{{categories.Github.parameters.repoPath}}/tags",
            "webhookVerb": "GET",
            "webhookPayloadType": "None",
            "webhookPayload": "",
            "webhookHeaders": [
                {
                    "key": "Authorization",
                    "value": "{{categories.Github.parameters.token}}"
                }
            ],
            "webhookUser": "",
            "webhookPassword": "",
            "postScript": "CSO.context.savedSlots[\"currentContextTag\"] = \n {\n    \"keyword\": \"githubItem\",\n    \"value\": CSO.webhook.lastTagWebhook.response[0],\n    \"original\": CSO.webhook.lastTagWebhook.response[0],\n    \"remainingLife\": 10,\n    \"promptCount\": 0\n}\n\nCSO;",
            "creationDate": "1571429471000",
            "modificationDate": "1571429471000"
        }
    },
    {
        "actionName": "postReleaseUsingLastTag",
        "slots": [
            {
                "slotName": "name",
                "uiColor": "#4e4e4e",
                "keyword": "sys.any",
                "keywordId": 0,
                "isList": false,
                "isRequired": true,
                "quickResponses": [],
                "textPrompts": [
                    "What name do you want for your release?"
                ],
                "freeText": true,
                "remainingLife": null,
                "promptCountLimit": null
            },
            {
                "slotName": "body",
                "uiColor": "#4e4e4e",
                "keyword": "sys.any",
                "keywordId": 0,
                "isList": false,
                "isRequired": true,
                "quickResponses": [],
                "textPrompts": [
                    "What is the description of the release?"
                ],
                "freeText": true,
                "remainingLife": null,
                "promptCountLimit": null
            }
        ],
        "responses": [
            {
                "textResponse": "{{#if webhook.postReleaseUsingLastTagWebhook.error}} {{#eq webhook.postReleaseUsingLastTagWebhook.error.errors.0.code compare = \"already_exists\"}} I'm sorry, a release with this tag already exists {{else}} I'm sorry, there was an error creating the release {{/eq}} {{else}} The release has been created {{/if}}",
                "actions": []
            }
        ],
        "useWebhook": true,
        "usePostFormat": false,
        "creationDate": "1571429471000",
        "modificationDate": "1571429471000",
        "webhook": {
            "webhookKey": "postReleaseUsingLastTagWebhook",
            "webhookUrl": "https://api.github.com/repos/{{categories.Github.parameters.repoPath}}/releases",
            "webhookVerb": "POST",
            "webhookPayloadType": "JSON",
            "webhookPayload": "{\n  \"tag_name\": \"{{{context.savedSlots.currentContextTag.value.name}}}\",\n  \"name\": \"{{{slots.name.value}}}\",\n  \"body\": \"{{{slots.body.value}}}\"\n}",
            "webhookHeaders": [
                {
                    "key": "Authorization",
                    "value": "{{categories.Github.parameters.token}}"
                }
            ],
            "webhookUser": "",
            "webhookPassword": "",
            "postScript": "CSO.context.savedSlots[\"currentContextRelease\"] = \n {\n    \"keyword\": \"githubItem\",\n    \"value\": CSO.webhook.postReleaseUsingLastTagWebhook.response,\n    \"original\": CSO.webhook.postReleaseUsingLastTagWebhook.response,\n    \"remainingLife\": 10,\n    \"promptCount\": 0\n}\n\nCSO;",
            "creationDate": "1571429471000",
            "modificationDate": "1571429471000"
        }
    },
    {
        "actionName": "deleteCurrentContextRelease",
        "slots": [],
        "responses": [
            {
                "textResponse": "{{#if webhook.deleteCurrentContextReleaseWebhook.error}} {{#eq webhook.deleteCurrentContextReleaseWebhook.error.message compare = \"Not Found\"}} I'm sorry, I don't remember any release created or requested recently in this conversation{{/eq}} {{else}}  The release has been deleted {{/if}}",
                "actions": []
            }
        ],
        "useWebhook": true,
        "usePostFormat": false,
        "creationDate": "1571429471000",
        "modificationDate": "1571429471000",
        "webhook": {
            "webhookKey": "deleteCurrentContextReleaseWebhook",
            "webhookUrl": "https://api.github.com/repos/{{categories.Github.parameters.repoPath}}/releases/{{context.savedSlots.currentContextRelease.value.id}}",
            "webhookVerb": "DELETE",
            "webhookPayloadType": "None",
            "webhookPayload": "",
            "webhookHeaders": [
                {
                    "key": "Authorization",
                    "value": "{{categories.Github.parameters.token}}"
                }
            ],
            "webhookUser": "",
            "webhookPassword": "",
            "postScript": "delete CSO.context.savedSlots.currentContextRelease;\n\nCSO;",
            "creationDate": "1571429471000",
            "modificationDate": "1571429471000"
        }
    },
    {
        "actionName": "countRepoOpenIssues",
        "slots": [],
        "responses": [
            {
                "textResponse": "The repository has: {{webhook.countRepoOpenIssuesWebhook.response.open_issues_count}} open issues(s)",
                "actions": []
            }
        ],
        "useWebhook": true,
        "usePostFormat": false,
        "creationDate": "1571429471000",
        "modificationDate": "1571429471000",
        "webhook": {
            "webhookKey": "countRepoOpenIssuesWebhook",
            "webhookUrl": "https://api.github.com/repos/{{categories.Github.parameters.repoPath}}",
            "webhookVerb": "GET",
            "webhookPayloadType": "None",
            "webhookPayload": "",
            "webhookHeaders": [
                {
                    "key": "Authorization",
                    "value": "{{categories.Github.parameters.token}}"
                }
            ],
            "webhookUser": "",
            "webhookPassword": "",
            "postScript": "CSO.context.savedSlots[\"currentContextMilestone\"] = \n {\n    \"keyword\": \"githubItem\",\n    \"value\": CSO.webhook.lastOpenMilestoneWebhook.response[0],\n    \"original\": CSO.webhook.lastOpenMilestoneWebhook.response[0],\n    \"remainingLife\": 10,\n    \"promptCount\": 0\n}\n\nCSO;",
            "creationDate": "1571429471000",
            "modificationDate": "1571429471000"
        }
    },
    {
        "actionName": "getIssue",
        "slots": [
            {
                "slotName": "state",
                "uiColor": "#A79AFF",
                "keyword": "state",
                "keywordId": 27,
                "isList": false,
                "isRequired": false,
                "quickResponses": [],
                "textPrompts": [],
                "freeText": false
            },
            {
                "slotName": "timeState",
                "uiColor": "#D5AAFF",
                "keyword": "timeState",
                "keywordId": 28,
                "isList": false,
                "isRequired": false,
                "quickResponses": [],
                "textPrompts": [],
                "freeText": false
            }
        ],
        "responses": [
            {
                "textResponse": "{{#if webhook.issueWebhook.response}} This is the {{#eq slots.timeState.value compare = \"\"}}most recent{{else}}{{slots.timeState.original}}{{/eq}} {{#eq slots.state.value compare = \"\"}}open{{else}}{{slots.state.original}}{{/eq}} issue {{#if context.savedSlots.currentContextUserName}}assigned to you {{else}}of the repo{{/if}} : \"{{webhook.issueWebhook.response.0.title}}\" and it was created on: {{dateTimeFormat webhook.issueWebhook.response.0.created_at \"DD/MM/YYYY\"}}{{else}}There was an error getting the requested issue{{/if}}",
                "actions": []
            }
        ],
        "useWebhook": true,
        "usePostFormat": false,
        "creationDate": "1571429471000",
        "modificationDate": "1571429471000",
        "webhook": {
            "webhookKey": "issueWebhook",
            "webhookUrl": "https://api.github.com/repos/{{categories.Github.parameters.repoPath}}/issues?{{#eq slots.state.value compare = \"\"}}&state=open{{else}}&state={{slots.state.value}}{{/eq}}{{#eq slots.timeState.value compare = \"\"}}&direction=desc{{else}}&direction={{slots.timeState.value}}{{/eq}}{{#if context.savedSlots.currentContextUserName}}&assignee={{context.savedSlots.currentContextUserName.value.login}}{{/if}}",
            "webhookVerb": "GET",
            "webhookPayloadType": "None",
            "webhookPayload": "",
            "webhookHeaders": [
                {
                    "key": "Authorization",
                    "value": "{{categories.Github.parameters.token}}"
                }
            ],
            "webhookUser": "",
            "webhookPassword": "",
            "postScript": "CSO.context.savedSlots[\"currentContextIssue\"] = \n {\n    \"keyword\": \"githubItem\",\n    \"value\": CSO.webhook.issueWebhook.response[0],\n    \"original\": CSO.webhook.issueWebhook.response[0],\n    \"remainingLife\": 10,\n    \"promptCount\": 0\n}\n\nCSO;",
            "creationDate": "1571429471000",
            "modificationDate": "1571429471000"
        }
    },
    {
        "actionName": "getMilestone",
        "slots": [
            {
                "slotName": "state",
                "uiColor": "#A79AFF",
                "keyword": "state",
                "keywordId": 27,
                "isList": false,
                "isRequired": false,
                "quickResponses": [],
                "textPrompts": [],
                "freeText": false
            },
            {
                "slotName": "timeState",
                "uiColor": "#D5AAFF",
                "keyword": "timeState",
                "keywordId": 28,
                "isList": false,
                "isRequired": false,
                "quickResponses": [],
                "textPrompts": [],
                "freeText": false
            }
        ],
        "responses": [
            {
                "textResponse": "{{#if webhook.milestoneWebhook.response}} This is the nearest open milestone : \"{{webhook.milestoneWebhook.response.0.title}}\" and its due date is: {{dateTimeFormat webhook.milestoneWebhook.response.0.due_on \"DD/MM/YYYY\"}}{{else}}There was an error getting the requested milestone{{/if}}",
                "actions": []
            }
        ],
        "useWebhook": true,
        "usePostFormat": false,
        "creationDate": "1571429471000",
        "modificationDate": "1571429471000",
        "webhook": {
            "webhookKey": "milestoneWebhook",
            "webhookUrl": "https://api.github.com/repos/{{categories.Github.parameters.repoPath}}/milestones?state=open&direction=asc",
            "webhookVerb": "GET",
            "webhookPayloadType": "None",
            "webhookPayload": "",
            "webhookHeaders": [
                {
                    "key": "Authorization",
                    "value": "{{categories.Github.parameters.token}}"
                }
            ],
            "webhookUser": "",
            "webhookPassword": "",
            "postScript": "CSO.context.savedSlots[\"currentContextMilestone\"] = \n {\n    \"keyword\": \"githubItem\",\n    \"value\": CSO.webhook.milestoneWebhook.response[0],\n    \"original\": CSO.webhook.milestoneWebhook.response[0],\n    \"remainingLife\": 10,\n    \"promptCount\": 0\n}\n\nCSO;",
            "creationDate": "1571429471000",
            "modificationDate": "1571429471000"
        }
    }
]